# coding: utf-8

"""
    Event Sourcing API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.event_message import EventMessage

class TestEventMessage(unittest.TestCase):
    """EventMessage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EventMessage:
        """Test EventMessage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EventMessage`
        """
        model = EventMessage()
        if include_optional:
            return EventMessage(
                event_id = '',
                aggregate_id = '',
                aggregate_type = '',
                version = 56,
                event_type = '',
                event_schema_version = '1.0',
                source = '',
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                payload = { },
                user_id = ''
            )
        else:
            return EventMessage(
                event_id = '',
                aggregate_id = '',
                version = 56,
                event_type = '',
                event_schema_version = '1.0',
                source = '',
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                payload = { },
        )
        """

    def testEventMessage(self):
        """Test EventMessage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
